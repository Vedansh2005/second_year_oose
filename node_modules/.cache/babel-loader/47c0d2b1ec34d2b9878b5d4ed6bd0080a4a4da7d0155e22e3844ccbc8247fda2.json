{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vedan\\\\OneDrive\\\\Desktop\\\\project\\\\stegano\\\\src\\\\pages\\\\ImageDecrypt.js\";\nimport React from \"react\";\nimport Button from \"../components/Button\";\nimport Steganography from \"../helpers/Steganography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ImageDecrypt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.steganObj = null;\n    this.state = {\n      isUploaded: false,\n      hiddenText: \"\"\n    };\n  }\n  onChangeFile(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    var self = this;\n    var file = event.target.files[0];\n    const canvas = this.canvasRef.current;\n    var reader = new FileReader();\n    reader.onload = function (e) {\n      const img = new Image();\n      img.src = e.target.result;\n      img.onload = () => {\n        try {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          const context = canvas.getContext(\"2d\");\n          context.drawImage(img, 0, 0);\n          self.steganObj = new Steganography(context, img);\n          let hiddenText = self.steganObj.GetHiddenContent();\n          self.setState({\n            hiddenText: hiddenText,\n            isUploaded: true\n          });\n        } catch (e) {\n          self.setState({\n            haveError: true,\n            isUploaded: true\n          });\n        }\n      };\n    };\n    reader.readAsDataURL(file);\n  }\n  replaceURLWithHTMLLinks(text) {\n    //eslint-disable-next-line\n    var exp = /(\\b(https?|http|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi;\n    return {\n      __html: text.replace(exp, \"<a target='_blank' href='$1'>$1</a>\")\n    };\n  }\n  render() {\n    let canvasStyle = this.state.isUploaded ? {\n      height: \"auto\"\n    } : {\n      height: \"0px\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CryptHolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Decode Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload your image to decode it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"ImageCanvas\",\n        ref: this.canvasRef,\n        style: canvasStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileUploadInput\",\n        type: \"file\",\n        accept: \"image/png, image/jpeg\",\n        ref: ref => this.upload = ref,\n        style: {\n          display: \"none\"\n        },\n        onChange: this.onChangeFile.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), this.state.isUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"HiddenText\",\n        children: [\"Decoded message:\", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"HiddenTextContainer\",\n          dangerouslySetInnerHTML: this.replaceURLWithHTMLLinks(this.state.hiddenText)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Upload\",\n        size: \"big\",\n        onClick: () => {\n          this.upload.click();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"subtitle\", {\n        children: \"This can take a while if your image is too large.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), this.state.haveError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ErrorPanel\",\n        children: \"Oh! Something happened. It might be because your image is corrupted or we messed up something. Either way, you can't use this image.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Button","Steganography","jsxDEV","_jsxDEV","ImageDecrypt","Component","constructor","props","canvasRef","createRef","steganObj","state","isUploaded","hiddenText","onChangeFile","event","stopPropagation","preventDefault","self","file","target","files","canvas","current","reader","FileReader","onload","e","img","Image","src","result","width","height","context","getContext","drawImage","GetHiddenContent","setState","haveError","readAsDataURL","replaceURLWithHTMLLinks","text","exp","__html","replace","render","canvasStyle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","id","type","accept","upload","display","onChange","bind","dangerouslySetInnerHTML","size","onClick","click"],"sources":["C:/Users/vedan/OneDrive/Desktop/project/stegano/src/pages/ImageDecrypt.js"],"sourcesContent":["import React from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport Steganography from \"../helpers/Steganography\";\r\n\r\nexport default class ImageDecrypt extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n    this.steganObj = null;\r\n    this.state = {\r\n      isUploaded: false,\r\n      hiddenText: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeFile(event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    var self = this;\r\n    var file = event.target.files[0];\r\n    const canvas = this.canvasRef.current;\r\n    var reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      const img = new Image();\r\n      img.src = e.target.result;\r\n      img.onload = () => {\r\n        try {\r\n          canvas.width = img.width;\r\n          canvas.height = img.height;\r\n          const context = canvas.getContext(\"2d\");\r\n          context.drawImage(img, 0, 0);\r\n          self.steganObj = new Steganography(context, img);\r\n          let hiddenText = self.steganObj.GetHiddenContent();\r\n          self.setState({ hiddenText: hiddenText, isUploaded: true });\r\n        } catch (e) {\r\n          self.setState({ haveError: true, isUploaded: true });\r\n        }\r\n      };\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  replaceURLWithHTMLLinks(text) {\r\n    //eslint-disable-next-line\r\n    var exp =\r\n      /(\\b(https?|http|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi;\r\n    return { __html: text.replace(exp, \"<a target='_blank' href='$1'>$1</a>\") };\r\n  }\r\n\r\n  render() {\r\n    let canvasStyle = this.state.isUploaded\r\n      ? { height: \"auto\" }\r\n      : { height: \"0px\" };\r\n    return (\r\n      <div className=\"CryptHolder\">\r\n        <h2>Decode Image</h2>\r\n        <p>Upload your image to decode it.</p>\r\n        <canvas\r\n          className=\"ImageCanvas\"\r\n          ref={this.canvasRef}\r\n          style={canvasStyle}\r\n        />\r\n        <input\r\n          id=\"fileUploadInput\"\r\n          type=\"file\"\r\n          accept=\"image/png, image/jpeg\"\r\n          ref={(ref) => (this.upload = ref)}\r\n          style={{ display: \"none\" }}\r\n          onChange={this.onChangeFile.bind(this)}\r\n        />\r\n        {this.state.isUploaded && (\r\n          <div className=\"HiddenText\">\r\n            Decoded message:{\" \"}\r\n            <div\r\n              className=\"HiddenTextContainer\"\r\n              dangerouslySetInnerHTML={this.replaceURLWithHTMLLinks(\r\n                this.state.hiddenText\r\n              )}\r\n            ></div>{\" \"}\r\n          </div>\r\n        )}\r\n        <Button\r\n          text=\"Upload\"\r\n          size=\"big\"\r\n          onClick={() => {\r\n            this.upload.click();\r\n          }}\r\n        ></Button>\r\n        <subtitle>This can take a while if your image is too large.</subtitle>\r\n        {this.state.haveError && (\r\n          <div className=\"ErrorPanel\">\r\n            Oh! Something happened. It might be because your image is corrupted\r\n            or we messed up something. Either way, you can't use this image.\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
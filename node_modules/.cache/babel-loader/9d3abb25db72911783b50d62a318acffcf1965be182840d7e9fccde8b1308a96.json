{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vedan\\\\OneDrive\\\\Desktop\\\\finalproject\\\\stegano\\\\src\\\\pages\\\\ImageCrypt.js\";\nimport React from \"react\";\nimport Button from \"../components/Button\";\nimport TextArea from \"../components/TextArea\";\nimport canvasToImage from \"canvas-to-image\";\nimport Steganography from \"../helpers/Steganography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ImageCrypt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.steganObj = null;\n    this.state = {\n      isUploaded: false,\n      maxCharCount: 100,\n      disableTextarea: false,\n      userContent: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      passwordError: \"\",\n      isLoading: false,\n      progress: 0,\n      processingStatus: \"\"\n    };\n  }\n  onChangeFile(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    var self = this;\n    var file = event.target.files[0];\n    const canvas = this.canvasRef.current;\n    var reader = new FileReader();\n    // Reader loaded\n    reader.onload = function (e) {\n      const img = new Image();\n      img.src = e.target.result;\n      // Image loaded\n      img.onload = () => {\n        // Resize canvas with image\n        canvas.width = img.width;\n        canvas.height = img.height;\n        const context = canvas.getContext(\"2d\");\n        context.drawImage(img, 0, 0); // Draw image to make it visible\n        self.setState({\n          isLoading: true\n        }, () => {\n          self.steganObj = new Steganography(context, img); // Init your Steganography object\n          let charSizeMax = self.steganObj.CalculateByteSize(); // Calculate bytes\n          // Beware. We are using base64 to avoid issues with UTF8 chars. This adds up 1.37 times more size. We are calculation that\n          self.setState({\n            maxCharCount: Math.floor(charSizeMax / (8 * 1.37)),\n            isUploaded: true,\n            isLoading: false\n          });\n        });\n      };\n    };\n    reader.readAsDataURL(file);\n  }\n  validatePassword() {\n    if (!this.state.password) {\n      this.setState({\n        passwordError: \"Password is required\"\n      });\n      return false;\n    }\n    if (this.state.password.length < 4) {\n      this.setState({\n        passwordError: \"Password must be at least 4 characters long\"\n      });\n      return false;\n    }\n    if (this.state.password !== this.state.confirmPassword) {\n      this.setState({\n        passwordError: \"Passwords do not match\"\n      });\n      return false;\n    }\n    this.setState({\n      passwordError: \"\"\n    });\n    return true;\n  }\n  saveCanvas() {\n    if (!this.validatePassword()) {\n      return;\n    }\n    var self = this;\n    self.setState({\n      isLoading: true,\n      progress: 0,\n      processingStatus: \"Processing image...\"\n    }, () => {\n      // Add password to the content before hiding\n      const contentWithPassword = `[PWD:${this.state.password}]${this.state.userContent}`;\n      let resObj = this.steganObj.HideDataInContext(contentWithPassword);\n      const canvasSave = this.canvasRef.current;\n      const context = canvasSave.getContext(\"2d\");\n\n      // Process in chunks\n      const chunkSize = 100;\n      const totalChunks = Math.ceil(resObj.image.height / chunkSize);\n      for (let chunk = 0; chunk < totalChunks; chunk++) {\n        const startRow = chunk * chunkSize;\n        const endRow = Math.min(startRow + chunkSize, resObj.image.height);\n        for (let c = 0; c < resObj.image.width; c++) {\n          for (let r = startRow; r < endRow; r++) {\n            context.putImageData(new ImageData(resObj.data[c][r], 1, 1), c, r);\n          }\n        }\n\n        // Update progress\n        const progress = Math.round((chunk + 1) / totalChunks * 100);\n        this.setState({\n          progress\n        });\n      }\n      canvasToImage(canvasSave, {\n        name: \"ImageCrypted\",\n        type: \"png\",\n        quality: 0.8\n      });\n      self.setState({\n        isLoading: false,\n        disableTextarea: true,\n        processingStatus: \"\"\n      });\n    });\n  }\n  onTextInputChange(text) {\n    this.setState({\n      userContent: text\n    });\n  }\n  onPasswordChange(e) {\n    this.setState({\n      password: e.target.value,\n      passwordError: \"\"\n    });\n  }\n  onConfirmPasswordChange(e) {\n    this.setState({\n      confirmPassword: e.target.value,\n      passwordError: \"\"\n    });\n  }\n  render() {\n    let canvasStyle = this.state.isUploaded ? {\n      height: \"auto\"\n    } : {\n      height: \"0px\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CryptHolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Encode Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload your image to hide text in it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), this.state.isUploaded && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"big\",\n        text: \"Reupload\",\n        onClick: () => {\n          this.upload.click();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), !this.state.isUploaded && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"big\",\n        text: \"Upload\",\n        onClick: () => {\n          this.upload.click();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"ImageCanvas\",\n        ref: this.canvasRef,\n        style: canvasStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileUploadInput\",\n        type: \"file\",\n        accept: \"image/png, image/jpeg\",\n        ref: ref => this.upload = ref,\n        style: {\n          display: \"none\"\n        },\n        onChange: this.onChangeFile.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), this.state.isUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"encryption-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Enter your message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            isDisabled: this.state.disableTextarea,\n            textMaxLength: this.state.maxCharCount,\n            onInput: this.onTextInputChange.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-lock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Set Password Protection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"password-input\",\n                placeholder: \"Enter password\",\n                value: this.state.password,\n                onChange: this.onPasswordChange.bind(this),\n                disabled: this.state.disableTextarea\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"password-input\",\n                placeholder: \"Confirm password\",\n                value: this.state.confirmPassword,\n                onChange: this.onConfirmPasswordChange.bind(this),\n                disabled: this.state.disableTextarea\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), this.state.passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: this.state.passwordError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            text: \"Download Encrypted Image\",\n            secondary: true,\n            onClick: () => {\n              this.saveCanvas();\n            },\n            disabled: this.state.isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), this.state.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-text\",\n            children: [this.state.processingStatus, this.state.progress > 0 && ` (${this.state.progress}%)`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${this.state.progress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"subtitle\", {\n          children: \"Large images will be automatically compressed for better performance.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Button","TextArea","canvasToImage","Steganography","jsxDEV","_jsxDEV","ImageCrypt","Component","constructor","props","canvasRef","createRef","steganObj","state","isUploaded","maxCharCount","disableTextarea","userContent","password","confirmPassword","passwordError","isLoading","progress","processingStatus","onChangeFile","event","stopPropagation","preventDefault","self","file","target","files","canvas","current","reader","FileReader","onload","e","img","Image","src","result","width","height","context","getContext","drawImage","setState","charSizeMax","CalculateByteSize","Math","floor","readAsDataURL","validatePassword","length","saveCanvas","contentWithPassword","resObj","HideDataInContext","canvasSave","chunkSize","totalChunks","ceil","image","chunk","startRow","endRow","min","c","r","putImageData","ImageData","data","round","name","type","quality","onTextInputChange","text","onPasswordChange","value","onConfirmPasswordChange","render","canvasStyle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","upload","click","ref","style","id","accept","display","onChange","bind","isDisabled","textMaxLength","onInput","placeholder","disabled","secondary"],"sources":["C:/Users/vedan/OneDrive/Desktop/finalproject/stegano/src/pages/ImageCrypt.js"],"sourcesContent":["import React from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport TextArea from \"../components/TextArea\";\r\nimport canvasToImage from \"canvas-to-image\";\r\nimport Steganography from \"../helpers/Steganography\";\r\n\r\nexport default class ImageCrypt extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n    this.steganObj = null;\r\n    this.state = {\r\n      isUploaded: false,\r\n      maxCharCount: 100,\r\n      disableTextarea: false,\r\n      userContent: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      passwordError: \"\",\r\n      isLoading: false,\r\n      progress: 0,\r\n      processingStatus: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeFile(event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    var self = this;\r\n    var file = event.target.files[0];\r\n    const canvas = this.canvasRef.current;\r\n    var reader = new FileReader();\r\n    // Reader loaded\r\n    reader.onload = function (e) {\r\n      const img = new Image();\r\n      img.src = e.target.result;\r\n      // Image loaded\r\n      img.onload = () => {\r\n        // Resize canvas with image\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        const context = canvas.getContext(\"2d\");\r\n        context.drawImage(img, 0, 0); // Draw image to make it visible\r\n        self.setState({ isLoading: true }, () => {\r\n          self.steganObj = new Steganography(context, img); // Init your Steganography object\r\n          let charSizeMax = self.steganObj.CalculateByteSize(); // Calculate bytes\r\n          // Beware. We are using base64 to avoid issues with UTF8 chars. This adds up 1.37 times more size. We are calculation that\r\n          self.setState({\r\n            maxCharCount: Math.floor(charSizeMax / (8 * 1.37)),\r\n            isUploaded: true,\r\n            isLoading: false,\r\n          });\r\n        });\r\n      };\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  validatePassword() {\r\n    if (!this.state.password) {\r\n      this.setState({ passwordError: \"Password is required\" });\r\n      return false;\r\n    }\r\n    if (this.state.password.length < 4) {\r\n      this.setState({ passwordError: \"Password must be at least 4 characters long\" });\r\n      return false;\r\n    }\r\n    if (this.state.password !== this.state.confirmPassword) {\r\n      this.setState({ passwordError: \"Passwords do not match\" });\r\n      return false;\r\n    }\r\n    this.setState({ passwordError: \"\" });\r\n    return true;\r\n  }\r\n\r\n  saveCanvas() {\r\n    if (!this.validatePassword()) {\r\n      return;\r\n    }\r\n\r\n    var self = this;\r\n    self.setState({ \r\n      isLoading: true,\r\n      progress: 0,\r\n      processingStatus: \"Processing image...\"\r\n    }, () => {\r\n      // Add password to the content before hiding\r\n      const contentWithPassword = `[PWD:${this.state.password}]${this.state.userContent}`;\r\n      let resObj = this.steganObj.HideDataInContext(contentWithPassword);\r\n      const canvasSave = this.canvasRef.current;\r\n      const context = canvasSave.getContext(\"2d\");\r\n      \r\n      // Process in chunks\r\n      const chunkSize = 100;\r\n      const totalChunks = Math.ceil(resObj.image.height / chunkSize);\r\n      \r\n      for (let chunk = 0; chunk < totalChunks; chunk++) {\r\n        const startRow = chunk * chunkSize;\r\n        const endRow = Math.min(startRow + chunkSize, resObj.image.height);\r\n        \r\n        for (let c = 0; c < resObj.image.width; c++) {\r\n          for (let r = startRow; r < endRow; r++) {\r\n            context.putImageData(new ImageData(resObj.data[c][r], 1, 1), c, r);\r\n          }\r\n        }\r\n        \r\n        // Update progress\r\n        const progress = Math.round((chunk + 1) / totalChunks * 100);\r\n        this.setState({ progress });\r\n      }\r\n\r\n      canvasToImage(canvasSave, {\r\n        name: \"ImageCrypted\",\r\n        type: \"png\",\r\n        quality: 0.8,\r\n      });\r\n\r\n      self.setState({ \r\n        isLoading: false, \r\n        disableTextarea: true,\r\n        processingStatus: \"\"\r\n      });\r\n    });\r\n  }\r\n\r\n  onTextInputChange(text) {\r\n    this.setState({ userContent: text });\r\n  }\r\n\r\n  onPasswordChange(e) {\r\n    this.setState({ \r\n      password: e.target.value,\r\n      passwordError: \"\"\r\n    });\r\n  }\r\n\r\n  onConfirmPasswordChange(e) {\r\n    this.setState({ \r\n      confirmPassword: e.target.value,\r\n      passwordError: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let canvasStyle = this.state.isUploaded\r\n      ? { height: \"auto\" }\r\n      : { height: \"0px\" };\r\n\r\n    return (\r\n      <div className=\"CryptHolder\">\r\n        <h2>Encode Image</h2>\r\n        <p>Upload your image to hide text in it.</p>\r\n\r\n        {this.state.isUploaded && (\r\n          <Button\r\n            size=\"big\"\r\n            text=\"Reupload\"\r\n            onClick={() => {\r\n              this.upload.click();\r\n            }}\r\n          />\r\n        )}\r\n        {!this.state.isUploaded && (\r\n          <Button\r\n            size=\"big\"\r\n            text=\"Upload\"\r\n            onClick={() => {\r\n              this.upload.click();\r\n            }}\r\n          />\r\n        )}\r\n        <canvas\r\n          className=\"ImageCanvas\"\r\n          ref={this.canvasRef}\r\n          style={canvasStyle}\r\n        />\r\n        <input\r\n          id=\"fileUploadInput\"\r\n          type=\"file\"\r\n          accept=\"image/png, image/jpeg\"\r\n          ref={(ref) => (this.upload = ref)}\r\n          style={{ display: \"none\" }}\r\n          onChange={this.onChangeFile.bind(this)}\r\n        />\r\n        {this.state.isUploaded && (\r\n          <div className=\"encryption-form\">\r\n            <div className=\"form-section\">\r\n              <h3>Enter your message:</h3>\r\n              <TextArea\r\n                isDisabled={this.state.disableTextarea}\r\n                textMaxLength={this.state.maxCharCount}\r\n                onInput={this.onTextInputChange.bind(this)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-section\">\r\n              <div className=\"password-container\">\r\n                <div className=\"password-header\">\r\n                  <i className=\"fa fa-lock\"></i>\r\n                  <h3>Set Password Protection</h3>\r\n                </div>\r\n                <div className=\"password-inputs\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"password-input\"\r\n                    placeholder=\"Enter password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onPasswordChange.bind(this)}\r\n                    disabled={this.state.disableTextarea}\r\n                  />\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"password-input\"\r\n                    placeholder=\"Confirm password\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onConfirmPasswordChange.bind(this)}\r\n                    disabled={this.state.disableTextarea}\r\n                  />\r\n                </div>\r\n                {this.state.passwordError && (\r\n                  <div className=\"error-message\">{this.state.passwordError}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-section\">\r\n              <Button\r\n                text=\"Download Encrypted Image\"\r\n                secondary\r\n                onClick={() => {\r\n                  this.saveCanvas();\r\n                }}\r\n                disabled={this.state.isLoading}\r\n              />\r\n            </div>\r\n\r\n            {this.state.isLoading && (\r\n              <div className=\"loading-container\">\r\n                <div className=\"loading-spinner\"></div>\r\n                <div className=\"loading-text\">\r\n                  {this.state.processingStatus}\r\n                  {this.state.progress > 0 && ` (${this.state.progress}%)`}\r\n                </div>\r\n                <div className=\"progress-bar\">\r\n                  <div \r\n                    className=\"progress-fill\"\r\n                    style={{ width: `${this.state.progress}%` }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n            <subtitle>\r\n              Large images will be automatically compressed for better performance.\r\n            </subtitle>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
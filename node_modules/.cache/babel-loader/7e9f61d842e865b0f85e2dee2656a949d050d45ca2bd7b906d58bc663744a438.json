{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vedan\\\\OneDrive\\\\Desktop\\\\finalproject\\\\stegano\\\\src\\\\pages\\\\ImageCrypt.js\";\nimport React from \"react\";\nimport Button from \"../components/Button\";\nimport TextArea from \"../components/TextArea\";\nimport canvasToImage from \"canvas-to-image\";\nimport Steganography from \"../helpers/Steganography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ImageCrypt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.steganObj = null;\n    this.state = {\n      isUploaded: false,\n      maxCharCount: 100,\n      disableTextarea: false,\n      userContent: \"\"\n    };\n  }\n  onChangeFile(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    var self = this;\n    var file = event.target.files[0];\n    const canvas = this.canvasRef.current;\n    var reader = new FileReader();\n    // Reader loaded\n    reader.onload = function (e) {\n      const img = new Image();\n      img.src = e.target.result;\n      // Image loaded\n      img.onload = () => {\n        // Resize canvas with image\n        canvas.width = img.width;\n        canvas.height = img.height;\n        const context = canvas.getContext(\"2d\");\n        context.drawImage(img, 0, 0); // Draw image to make it visible\n        self.setState({\n          isLoading: true\n        }, () => {\n          self.steganObj = new Steganography(context, img); // Init your Steganography object\n          let charSizeMax = self.steganObj.CalculateByteSize(); // Calculate bytes\n          // Beware. We are using base64 to avoid issues with UTF8 chars. This adds up 1.37 times more size. We are calculation that\n          self.setState({\n            maxCharCount: Math.floor(charSizeMax / (8 * 1.37)),\n            isUploaded: true,\n            isLoading: false\n          });\n        });\n      };\n    };\n    reader.readAsDataURL(file);\n  }\n\n  // This is the heavy-work function. It interacts with Stegan object.\n  saveCanvas() {\n    var self = this;\n    self.setState({\n      isLoading: true\n    }, () => {\n      // TODO: Turn this into a worker function so that it won't block UI. Or.. well.. upload it to server or something\n      let resObj = this.steganObj.HideDataInContext(this.state.userContent);\n      const canvasSave = this.canvasRef.current;\n      const context = canvasSave.getContext(\"2d\");\n      for (var c = 0; c < resObj.image.width; c++) {\n        for (var r = 0; r < resObj.image.height; r++) {\n          context.putImageData(new ImageData(resObj.data[c][r], 1, 1), c, r); // We want to save this to canvas again. So that we can do stuff.\n        }\n      }\n\n      canvasToImage(canvasSave, {\n        name: \"ImageCrypted\",\n        type: \"png\",\n        quality: 1\n      });\n      self.setState({\n        isLoading: false,\n        disableTextarea: true\n      });\n    });\n  }\n  onTextInputChange(text) {\n    this.setState({\n      userContent: text\n    });\n  }\n  render() {\n    let canvasStyle = this.state.isUploaded ? {\n      height: \"auto\"\n    } : {\n      height: \"0px\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CryptHolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Encode Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload your image to hide text in it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), this.state.isUploaded && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"big\",\n        text: \"Reupload\",\n        onClick: () => {\n          this.upload.click();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), !this.state.isUploaded && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"big\",\n        text: \"Upload\",\n        onClick: () => {\n          this.upload.click();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"ImageCanvas\",\n        ref: this.canvasRef,\n        style: canvasStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileUploadInput\",\n        type: \"file\",\n        accept: \"image/png, image/jpeg\",\n        ref: ref => this.upload = ref,\n        style: {\n          display: \"none\"\n        },\n        onChange: this.onChangeFile.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), this.state.isUploaded && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: \"contents\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextArea, {\n          isDisabled: this.state.disableTextarea,\n          textMaxLength: this.state.maxCharCount,\n          onInput: this.onTextInputChange.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Download\",\n          secondary: true,\n          onClick: () => {\n            this.saveCanvas();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"subtitle\", {\n          children: \"This can take a while if your image is too large.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Button","TextArea","canvasToImage","Steganography","jsxDEV","_jsxDEV","ImageCrypt","Component","constructor","props","canvasRef","createRef","steganObj","state","isUploaded","maxCharCount","disableTextarea","userContent","onChangeFile","event","stopPropagation","preventDefault","self","file","target","files","canvas","current","reader","FileReader","onload","e","img","Image","src","result","width","height","context","getContext","drawImage","setState","isLoading","charSizeMax","CalculateByteSize","Math","floor","readAsDataURL","saveCanvas","resObj","HideDataInContext","canvasSave","c","image","r","putImageData","ImageData","data","name","type","quality","onTextInputChange","text","render","canvasStyle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","upload","click","ref","style","id","accept","display","onChange","bind","isDisabled","textMaxLength","onInput","secondary"],"sources":["C:/Users/vedan/OneDrive/Desktop/finalproject/stegano/src/pages/ImageCrypt.js"],"sourcesContent":["import React from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport TextArea from \"../components/TextArea\";\r\nimport canvasToImage from \"canvas-to-image\";\r\nimport Steganography from \"../helpers/Steganography\";\r\n\r\nexport default class ImageCrypt extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n    this.steganObj = null;\r\n    this.state = {\r\n      isUploaded: false,\r\n      maxCharCount: 100,\r\n      disableTextarea: false,\r\n      userContent: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeFile(event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    var self = this;\r\n    var file = event.target.files[0];\r\n    const canvas = this.canvasRef.current;\r\n    var reader = new FileReader();\r\n    // Reader loaded\r\n    reader.onload = function (e) {\r\n      const img = new Image();\r\n      img.src = e.target.result;\r\n      // Image loaded\r\n      img.onload = () => {\r\n        // Resize canvas with image\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        const context = canvas.getContext(\"2d\");\r\n        context.drawImage(img, 0, 0); // Draw image to make it visible\r\n        self.setState({ isLoading: true }, () => {\r\n          self.steganObj = new Steganography(context, img); // Init your Steganography object\r\n          let charSizeMax = self.steganObj.CalculateByteSize(); // Calculate bytes\r\n          // Beware. We are using base64 to avoid issues with UTF8 chars. This adds up 1.37 times more size. We are calculation that\r\n          self.setState({\r\n            maxCharCount: Math.floor(charSizeMax / (8 * 1.37)),\r\n            isUploaded: true,\r\n            isLoading: false,\r\n          });\r\n        });\r\n      };\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  // This is the heavy-work function. It interacts with Stegan object.\r\n  saveCanvas() {\r\n    var self = this;\r\n    self.setState({ isLoading: true }, () => {\r\n      // TODO: Turn this into a worker function so that it won't block UI. Or.. well.. upload it to server or something\r\n      let resObj = this.steganObj.HideDataInContext(this.state.userContent);\r\n      const canvasSave = this.canvasRef.current;\r\n      const context = canvasSave.getContext(\"2d\");\r\n      for (var c = 0; c < resObj.image.width; c++) {\r\n        for (var r = 0; r < resObj.image.height; r++) {\r\n          context.putImageData(new ImageData(resObj.data[c][r], 1, 1), c, r); // We want to save this to canvas again. So that we can do stuff.\r\n        }\r\n      }\r\n      canvasToImage(canvasSave, {\r\n        name: \"ImageCrypted\",\r\n        type: \"png\",\r\n        quality: 1,\r\n      });\r\n      self.setState({ isLoading: false, disableTextarea: true });\r\n    });\r\n  }\r\n\r\n  onTextInputChange(text) {\r\n    this.setState({ userContent: text });\r\n  }\r\n\r\n  render() {\r\n    let canvasStyle = this.state.isUploaded\r\n      ? { height: \"auto\" }\r\n      : { height: \"0px\" };\r\n\r\n    return (\r\n      <div className=\"CryptHolder\">\r\n        <h2>Encode Image</h2>\r\n        <p>Upload your image to hide text in it.</p>\r\n\r\n        {this.state.isUploaded && (\r\n          <Button\r\n            size=\"big\"\r\n            text=\"Reupload\"\r\n            onClick={() => {\r\n              this.upload.click();\r\n            }}\r\n          ></Button>\r\n        )}\r\n        {!this.state.isUploaded && (\r\n          <Button\r\n            size=\"big\"\r\n            text=\"Upload\"\r\n            onClick={() => {\r\n              this.upload.click();\r\n            }}\r\n          ></Button>\r\n        )}\r\n        <canvas\r\n          className=\"ImageCanvas\"\r\n          ref={this.canvasRef}\r\n          style={canvasStyle}\r\n        />\r\n        <input\r\n          id=\"fileUploadInput\"\r\n          type=\"file\"\r\n          accept=\"image/png, image/jpeg\"\r\n          ref={(ref) => (this.upload = ref)}\r\n          style={{ display: \"none\" }}\r\n          onChange={this.onChangeFile.bind(this)}\r\n        />\r\n        {this.state.isUploaded && (\r\n          <span style={{ display: \"contents\" }}>\r\n            <TextArea\r\n              isDisabled={this.state.disableTextarea}\r\n              textMaxLength={this.state.maxCharCount}\r\n              onInput={this.onTextInputChange.bind(this)}\r\n            />\r\n            <Button\r\n              text=\"Download\"\r\n              secondary\r\n              onClick={() => {\r\n                this.saveCanvas();\r\n              }}\r\n            ></Button>\r\n            <subtitle>\r\n              This can take a while if your image is too large.\r\n            </subtitle>\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}